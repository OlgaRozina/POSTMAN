{
	"info": {
		"_postman_id": "b1d64982-bb22-48f6-acc5-cce40e511c23",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26062386",
		"_collection_link": "https://universal-rocket-993917.postman.co/workspace/Team-Workspace~b55eeee4-c192-441a-852b-6f9364c71cd0/collection/26062386-b1d64982-bb22-48f6-acc5-cce40e511c23?action=share&creator=26062386&source=collection_link"
	},
	"item": [
		{
			"name": "EP1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let response_Json=pm.response.json();\r",
							"pm.test(\"Name is Olga\", function () {\r",
							"    pm.expect(response_Json).to.have.property(\"name\", \"Olga\");\r",
							"});\r",
							"pm.test(\"Age is 24\", function () {\r",
							"  pm.expect(response_Json).to.have.property(\"age\", \"24\");\r",
							"});\r",
							"pm.test(\"Salary is 500\", function () {\r",
							"  pm.expect(response_Json).to.have.property(\"salary\",500);\r",
							"});\r",
							"let parsing_request = request.data;\r",
							"    pm.test('name from request', function(){\r",
							"    pm.expect(response_Json.name).to.equal(parsing_request.name);\r",
							"});\r",
							"pm.test('age from request', function(){\r",
							"    pm.expect(response_Json.age).to.equal(parsing_request.age);\r",
							"});\r",
							"pm.test('salary from request',function(){\r",
							"pm.expect(response_Json.salary).to.equal(+parsing_request.salary);\r",
							"});\r",
							"console.log(response_Json.family);\r",
							"pm.test('salary from request',function(){\r",
							"pm.expect(response_Json.family.u_salary_1_5_year).to.equal (parsing_request.salary*4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Olga",
							"type": "text"
						},
						{
							"key": "age",
							"value": "24",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let response_Json=pm.response.json();\r",
							"let parsing_request = request.data;\r",
							"pm.test(\"Name is Olga\", function () {\r",
							"    pm.expect(response_Json).to.have.property(\"name\", \"Olga\");\r",
							"});\r",
							"pm.test(\"Age is 24\", function () {\r",
							"  pm.expect(response_Json).to.have.property(\"age\", \"24\");\r",
							"});\r",
							"pm.test(\"Salary is 500\", function () {\r",
							"  pm.expect(response_Json).to.have.property(\"salary\",500);\r",
							"});\r",
							"console.log(response_Json.family);\r",
							"pm.test(\"Dog's name is Luky\", function () {\r",
							"  pm.expect(response_Json.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"pm.test(\"Dog's name is Luky\", function () {\r",
							"  pm.expect(response_Json.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"pm.test(\"Dog's name is Luky\", function () {\r",
							"  pm.expect(response_Json.family.pets.dog.name).to.eql (\"Luky\");\r",
							"});\r",
							"pm.test(\"Luky's age is 4\", function () {\r",
							"  pm.expect(response_Json.family.pets.dog.age).to.eql (4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Olga",
							"type": "text"
						},
						{
							"key": "age",
							"value": "24",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Olga&age=24&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Olga"
						},
						{
							"key": "age",
							"value": "24"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let response_Json=pm.response.json();\r",
							"let parsing_request = request.data;\r",
							"pm.test(\"Name is Olga\", function () {\r",
							"    pm.expect(response_Json).to.have.property(\"name\", \"Olga\");\r",
							"});\r",
							"pm.test(\"Age is 24\", function () {\r",
							"  pm.expect(response_Json).to.have.property(\"age\", 24);\r",
							"});\r",
							"console.log(parsing_request.salary);\r",
							"console.log(response_Json.salary);\r",
							"console.log(response_Json.salary[0]);\r",
							"console.log(response_Json.salary[1]);\r",
							"console.log(response_Json.salary[2]);\r",
							"pm.test(\"0 salary element = salary from req\", function () {\r",
							"  pm.expect(response_Json.salary[0]).to.eql (+parsing_request.salary);\r",
							"});\r",
							"pm.test(\"1 salary element = salary from req\", function () {\r",
							"  pm.expect(+response_Json.salary[1]).to.eql (parsing_request.salary*2);\r",
							"});\r",
							"pm.test(\"2 salary element = salary from req\", function () {\r",
							"  pm.expect(+response_Json.salary[2]).to.eql (parsing_request.salary*3);\r",
							"});\r",
							"pm.environment.set(\"name\", \"Olga\");\r",
							"pm.environment.set(\"age\", 24);\r",
							"pm.environment.set(\"salary\", 500);\r",
							"response_Json.salary.forEach(element =>{\r",
							"console.log(element);\r",
							"});\r",
							"for (let i = 0; i<response_Json.salary.length; i++){\r",
							"console.log(response_Json.salary[i]);    \r",
							"};\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Olga",
							"type": "text"
						},
						{
							"key": "age",
							"value": "24",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Olga&age=24&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Olga"
						},
						{
							"key": "age",
							"value": "24"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let response_Json=pm.response.json();\r",
							"let parsing_request = request.data;\r",
							"console.log(parsing_request);\r",
							"pm.test(\"The first QA salary\", function () {\r",
							"pm.expect(response_Json).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"pm.test(\"QA salary after 6 months\", function () {\r",
							"pm.expect(response_Json).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"pm.test(\"QA salary after 12 months\", function () {\r",
							"pm.expect(response_Json).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"pm.test(\"QA salary after 1.5 year\", function () {\r",
							"pm.expect(response_Json).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"pm.test(\"QA salary after 3.5 year\", function () {\r",
							"pm.expect(response_Json).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"pm.test(\"Response there is person\", function () {\r",
							"pm.expect(response_Json).to.have.property(\"person\");\r",
							"});\r",
							"pm.test(\"Start QA salary equal salary\", function () {\r",
							"pm.expect(response_Json.start_qa_salary).to.eql (+parsing_request.salary);\r",
							"});\r",
							"pm.test(\"The QA salary after 6 months equal salary\", function () {\r",
							"pm.expect(response_Json.qa_salary_after_6_months).to.eql (parsing_request.salary*2);\r",
							"});\r",
							"pm.test(\"The QA salary after 12 months equal salary\", function () {\r",
							"pm.expect(response_Json.qa_salary_after_12_months).to.eql (parsing_request.salary*2.7);\r",
							"});\r",
							"pm.test(\"The QA salary after 1.5 year equal salary\", function () {\r",
							"pm.expect(response_Json['qa_salary_after_1.5_year']).to.eql (+parsing_request.salary*3.3);\r",
							"});\r",
							"pm.test(\"The QA salary after 3.5 years equal salary\", function () {\r",
							"pm.expect(response_Json['qa_salary_after_3.5_years']).to.eql (+parsing_request.salary*3.8);\r",
							"});\r",
							"pm.test(\"U_name equal salary\", function () {\r",
							"pm.expect(response_Json.person.u_name[1]).to.eql (+parsing_request.salary);\r",
							"});\r",
							"pm.test(\"U_name equal age\", function () {\r",
							"pm.expect(response_Json.person.u_age).to.eql (+parsing_request.age);\r",
							"});\r",
							"pm.test(\"U_salary_5_years equal salary*4.2 \", function () {\r",
							"pm.expect(response_Json.person.u_salary_5_years).to.eql (+parsing_request.salary*4.2);\r",
							"});\r",
							"for (let i = 0; i<response_Json.person.length; i++){\r",
							"console.log(response_Json.person[i]);    \r",
							"};"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "name",
			"value": "",
			"type": "string"
		},
		{
			"key": "age",
			"value": "",
			"type": "string"
		},
		{
			"key": "salary",
			"value": "",
			"type": "string"
		}
	]
}